<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/nvidia/catkin_ws/src/qdrone_description/urdf/qdrone_c.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="quad" xmlns:xacro="http://ros.org/wiki/xacro">
  <!--arg name = "tf_prefix"           default="$(optenv ROS_NAMESPACE)"/-->
  <!--arg name = "headless"            default="false"/-->
  <!--arg name = "gui"                 default="true"/-->
  <!--arg name = "name"                default="quad"/-->
  <!--1.52-->
  <!-- ros_control plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/quad</robotNamespace>
    </plugin>
  </gazebo>
  <!-- Link -->
  <!--gazebo reference="footprint"-->
  <gazebo reference="bae_link">
    <material>Gazebo/Green</material>
  </gazebo>
  <!-- Link -->
  <gazebo reference="seat">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <!--material>Gazebo/Orange</material-->
    <material>Gazebo/Turquoise</material>
  </gazebo>
  <!-- Link -->
  <gazebo reference="feet_support">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Turquoise</material>
  </gazebo>
  <!-- Link -->
  <gazebo reference="right_front_wheel">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- Link -->
  <gazebo reference="left_front_wheel">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- Link -->
  <gazebo reference="right_back_wheel">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <material>Gazebo/Orange</material>
  </gazebo>
  <!-- Link -->
  <gazebo reference="left_back_wheel">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <material>Gazebo/Orange</material>
  </gazebo>
  <!-- Link -->
  <gazebo reference="right_handle">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>
  <!-- Link -->
  <gazebo reference="left_handle">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>
  <!-- Link -->
  <gazebo reference="back_rest">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>
  <!-- Link -->
  <gazebo reference="head_rest">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>
  <!-- camera_link -->
  <gazebo reference="laser">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>
  <!-- camera_link -->
  <gazebo reference="camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- camera_link -->
  <gazebo reference="camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="caster_wheel">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <material>Gazebo/Red</material>
  </gazebo>
  <!-- hokuyo -->
  <gazebo reference="laser">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>50</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!--
 <gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>50</updateRate>
    <leftJoint>base_to_left_front_wheel</leftJoint>
    <rightJoint>base_to_right_front_wheel</rightJoint>
    <wheelSeparation>0.5380</wheelSeparation>
    <wheelDiameter>0.2410</wheelDiameter>
    <torque>20</torque>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base_footprint</robotBaseFrame>
  </plugin>
</gazebo>
-->
  <!--gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>100</updateRate>
    <leftJoint>left_wheel_hinge</leftJoint>
    <rightJoint>right_wheel_hinge</rightJoint>
    <wheelSeparation>0.55</wheelSeparation>
    <wheelDiameter>${2*radius_front_wheel}</wheelDiameter>
    <torque>20</torque>
    <commandTopic>/cmd_vel</commandTopic>
    <odometryTopic>/awc/odom_diffdrive</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base_link</robotBaseFrame>
  </plugin>
</gazebo-->
  <!--
<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>${update_rate}</updateRate>
    <leftJoint>base_link_right_wheel_joint</leftJoint>
    <rightJoint>base_link_left_wheel_joint</rightJoint>
    <wheelSeparation>0.5380</wheelSeparation>
    <wheelDiameter>0.2410</wheelDiameter>
    <torque>20</torque>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base_footprint</robotBaseFrame>
  </plugin>
</gazebo>
-->
  <!-- camera -->
  <gazebo reference="camera_link">
    <sensor name="camera1" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="cyan">
    <color rgba="0 1.0 1.0 1.0"/>
  </material>
  <material name="Orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <!--xacro:include filename="$(find qdrone_description)/urdf/component_snippets.xacro" /-->
  <gazebo>
    <plugin filename="librotors_gazebo_controller_interface.so" name="controller_interface">
      <robotNamespace>quad</robotNamespace>
      <commandAttitudeThrustSubTopic>command/attitude</commandAttitudeThrustSubTopic>
      <commandRateThrustSubTopic>command/rate</commandRateThrustSubTopic>
      <commandMotorSpeedSubTopic>command/motor_speed</commandMotorSpeedSubTopic>
      <imuSubTopic>imu</imuSubTopic>
      <motorSpeedCommandPubTopic>gazebo/command/motor_speed</motorSpeedCommandPubTopic>
    </plugin>
  </gazebo>
  <!-- IMU link -->
  <link name="quad/imu_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.015"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="quad/imu_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="quad/imu_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_imu_plugin.so" name="rotors_gazebo_imu_plugin">
      <!-- A good description of the IMU parameters can be found in the kalibr documentation:
           https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics -->
      <robotNamespace>quad</robotNamespace>
      <!-- (string, required): ros namespace in which the messages are published -->
      <linkName>quad/imu_link</linkName>
      <!-- (string, required): name of the body which holds the IMU sensor -->
      <imuTopic>imu</imuTopic>
      <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
      <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
      <!-- Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] -->
      <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
      <!-- Gyroscope bias random walk [rad/s/s/sqrt(Hz)] -->
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      <!-- Gyroscope bias correlation time constant [s] -->
      <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
      <!-- Gyroscope turn on bias standard deviation [rad/s] -->
      <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
      <!-- Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] -->
      <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
      <!-- Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] -->
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      <!-- Accelerometer bias correlation time constant [s] -->
      <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
      <!-- Accelerometer turn on bias standard deviation [m/s^2] -->
    </plugin>
  </gazebo>
  <!--xacro:include filename="$(find awc_description)/urdf/sensors/kinect.urdf.xacro"/-->
  <!--xacro:include filename="$(find zed_wrapper)/urdf/zed_test.xacro"/-->
  <!-- Main multirotor link -->
  <!--link name="base_link"></link-->
  <!--joint name="base_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="footprint" />
    </joint-->
  <link name="base_link">
    <inertial>
      <mass value="1.4"/>
      <!-- [kg] -->
      <origin xyz="0 0 -1.57"/>
      <inertia ixx="0.05" ixy="0.0" ixz="0.0" iyy="0.05" iyz="0.0" izz="0.24"/>
      <!-- [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] -->
    </inertial>
    <visual>
      <origin rpy="0 0 -1.57" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://qdrone_description/meshes/dronebase.dae" scale="1 1 1"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 -1.57" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://qdrone_description/meshes/dronebase.dae" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <!-- attach multirotor_base_plugin to the base_link -->
  <gazebo>
    <plugin filename="librotors_gazebo_multirotor_base_plugin.so" name="rosbag">
      <robotNamespace>quad</robotNamespace>
      <linkName>base_link</linkName>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="base_link">
    <material>Gazebo/blue</material>
  </gazebo>
  <!--robot name="zed_camera"-->
  <!-- Camera Center -->
  <link name="zed_camera_center">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zed_wrapper/urdf/ZED.stl"/>
      </geometry>
      <material name="light_grey">
        <color rgba="0.8 0.8 0.8 0.8"/>
      </material>
    </visual>
  </link>
  <joint name="base_zed" type="fixed">
    <parent link="base_link"/>
    <child link="zed_camera_center"/>
    <origin rpy="0 0 0" xyz="0.15 0 -0.06"/>
  </joint>
  <!--joint name="base_zed" type="fixed">
        <parent link="zed_camera_center"/>
        <child link="${parent}"/>
        <origin xyz="0.15 0 -0.06" rpy="0 0 0" />
     </joint-->
  <!-- Left Camera -->
  <joint name="zed_left_camera_joint" type="fixed">
    <parent link="zed_camera_center"/>
    <child link="zed_left_camera_frame"/>
    <origin rpy="0 0 0" xyz="0 0.06 0"/>
  </joint>
  <link name="zed_left_camera_frame"/>
  <joint name="zed_left_camera_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
    <parent link="zed_left_camera_frame"/>
    <child link="zed_left_camera_optical_frame"/>
  </joint>
  <link name="zed_left_camera_optical_frame"/>
  <!-- Right Camera -->
  <joint name="zed_right_camera_joint" type="fixed">
    <parent link="zed_camera_center"/>
    <child link="zed_right_camera_frame"/>
    <origin rpy="0 0 0" xyz="0 -0.06 0"/>
  </joint>
  <link name="zed_right_camera_frame"/>
  <joint name="zed_right_camera_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
    <parent link="zed_right_camera_frame"/>
    <child link="zed_right_camera_optical_frame"/>
  </joint>
  <link name="zed_right_camera_optical_frame"/>
  <!-- Hokuyo Laser -->
  <!--link name="laser">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://qdrone_description/meshes/hokuyo.dae"/>
      </geometry>
    <material name="red" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link-->
  <!--joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.0 0 -0.09" rpy="3.1416 0 0"/>
    <parent link="base_link"/>
    <child link="laser"/>
  </joint-->
  <joint name="rotor_0_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.17 0 0.01"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_0"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz>
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_0">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.000326704166667" iyz="0.0" izz="0.000327604166667"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <!-- <mesh filename="package://rotors_description/meshes/propeller_${direction}.dae" -->
        <mesh filename="package://rotors_description/meshes/propeller_ccw.dae" scale=".12 .12 .12"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.14"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="front_motor_model">
      <robotNamespace>quad</robotNamespace>
      <jointName>rotor_0_joint</jointName>
      <linkName>rotor_0</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.15</timeConstantUp>
      <timeConstantDown>0.15</timeConstantDown>
      <maxRotVelocity>770</maxRotVelocity>
      <motorConstant>2.39e-05</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>0</motorNumber>
      <rotorDragCoefficient>1.3858e-06</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/0</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="rotor_0">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="rotor_1_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 -0.17 0.01"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_1"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz>
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_1">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.000326704166667" iyz="0.0" izz="0.000327604166667"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <!-- <mesh filename="package://rotors_description/meshes/propeller_${direction}.dae" -->
        <mesh filename="package://rotors_description/meshes/propeller_cw.dae" scale=".12 .12 .12"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.14"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="right_motor_model">
      <robotNamespace>quad</robotNamespace>
      <jointName>rotor_1_joint</jointName>
      <linkName>rotor_1</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.15</timeConstantUp>
      <timeConstantDown>0.15</timeConstantDown>
      <maxRotVelocity>770</maxRotVelocity>
      <motorConstant>2.39e-05</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>1</motorNumber>
      <rotorDragCoefficient>1.3858e-06</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/1</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="rotor_1">
    <material>Gazebo/Grey</material>
  </gazebo>
  <joint name="rotor_2_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.17 0 0.01"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_2"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz>
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_2">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.000326704166667" iyz="0.0" izz="0.000327604166667"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <!-- <mesh filename="package://rotors_description/meshes/propeller_${direction}.dae" -->
        <mesh filename="package://rotors_description/meshes/propeller_ccw.dae" scale=".12 .12 .12"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.14"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="back_motor_model">
      <robotNamespace>quad</robotNamespace>
      <jointName>rotor_2_joint</jointName>
      <linkName>rotor_2</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.15</timeConstantUp>
      <timeConstantDown>0.15</timeConstantDown>
      <maxRotVelocity>770</maxRotVelocity>
      <motorConstant>2.39e-05</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>2</motorNumber>
      <rotorDragCoefficient>1.3858e-06</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/2</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="rotor_2">
    <material>Gazebo/Grey</material>
  </gazebo>
  <joint name="rotor_3_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 0.17 0.01"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_3"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz>
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_3">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.000326704166667" iyz="0.0" izz="0.000327604166667"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <!-- <mesh filename="package://rotors_description/meshes/propeller_${direction}.dae" -->
        <mesh filename="package://rotors_description/meshes/propeller_cw.dae" scale=".12 .12 .12"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.14"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="left_motor_model">
      <robotNamespace>quad</robotNamespace>
      <jointName>rotor_3_joint</jointName>
      <linkName>rotor_3</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.15</timeConstantUp>
      <timeConstantDown>0.15</timeConstantDown>
      <maxRotVelocity>770</maxRotVelocity>
      <motorConstant>2.39e-05</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>3</motorNumber>
      <rotorDragCoefficient>1.3858e-06</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/3</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="rotor_3">
    <material>Gazebo/Grey</material>
  </gazebo>
</robot>

